<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// retrieve all available achievements for this game

retrieveAll = true;

title = "Not set";

alarm[0] = 1;  // request all available achievements next frame


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// either request all achievements or player's achievements
if (retrieveAll)
    getAllAchievements();
else
    getPlayerAchievements();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// load player achievements
retrieveAll = false;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// load all achievements
retrieveAll = true;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw either all achievements or player achievements

if (retrieveAll) {
    // show retrieve player achievements button
    // and set screen title to all
    title = "All available achievements";
} else {
    // show retrieve all achievements
    // and set screen title to player
    title = "Player's achievements";
    
}
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fontBig);
draw_text(room_width/2, 30, title);
draw_set_font(fontNormal);

var yy = 100;
var xx = room_width/2;
var elems = 0;
var i;
var scale = 0.2;      // scale factor because the globalstats.io sprites are pretty big

// show all achievements or player achievements

yy = 200;
if (retrieveAll) {
    // show all achievements of the game
    if (oGlobalStatsIOController.gsAllAchievements == 0) {
        draw_text(xx, yy, "Retrieving all achievements information...");
    } else {
        elems = oGlobalStatsIOController.gsAllAchievementsSize;
        for (i = 0; i &lt; elems; i++) {
            var key, name, description;
            key = oGlobalStatsIOController.gsAllAchievements[i, AchievementResult.Key];
            name = oGlobalStatsIOController.gsAllAchievements[i, AchievementResult.Name];
            description = oGlobalStatsIOController.gsAllAchievements[i, AchievementResult.Description];
            draw_text(xx, yy +i*30, "Key " + string(key) + ", Name " + string(name) + ", Description '" + string(description) + "'");
        }
    }
} else {
    // show player achievements
    if (oGlobalStatsIOController.gsPlayerAchievements == 0) {
        draw_text(xx, yy, "Retrieving player achievements information...");
    } else {
        elems = oGlobalStatsIOController.gsPlayerAchievementsSize;
        for (i = 0; i &lt; elems; i++) {
            var key, name, description, accomplished, spr;
            key = oGlobalStatsIOController.gsPlayerAchievements[i, AchievementResult.Key];
            name = oGlobalStatsIOController.gsPlayerAchievements[i, AchievementResult.Name];
            description = oGlobalStatsIOController.gsPlayerAchievements[i, AchievementResult.Description];
            accomplished = oGlobalStatsIOController.gsPlayerAchievements[i, AchievementResult.Accomplished];
            if (accomplished)
                spr = getAchievementSprite(oGlobalStatsIOController.gsPlayerAchievements[i, AchievementResult.ImageActiveURL]);
            else
                spr = getAchievementSprite(oGlobalStatsIOController.gsPlayerAchievements[i, AchievementResult.ImageInactiveURL]);
            if (!is_undefined(spr)) {
                // draw the proper sprite
//                draw_sprite(spr, 0, xx - (sprite_get_width(spr)+10), yy + i * 60);
                draw_sprite_ext(spr, 0, xx - (sprite_get_width(spr)+10), yy + i * 60, scale, scale, 0, c_white, 1);
            }
            draw_text(xx, yy +i*60, "Key " + string(key) + ", Name " + string(name) + ", Description '" + string(description) + "'");
            draw_text(xx, yy +i*60+30, "Accomplished: " + string(accomplished));
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
