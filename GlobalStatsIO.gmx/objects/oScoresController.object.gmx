<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// first upload the current score. if it is the first time we will also
// retrieve the unique player id automatically.

sendHighscore(global.CurrentScore);
alarm[0] = room_speed;  // request rank in one second

topEntries = 10;
alarm[1] = room_speed * 2;  // request highscores in two seconds

oGlobalStatsIOController.gsLinkAccountURL = noone;
alarm[2] = room_speed * 3;  // request link url in three seconds
linkButtonCreated = false;

if (global.FirstPlay)
    alarm[3] = room_speed * 2;  // accomplish first play achievement in 2 seconds.
    // Check that player id is valid now. No achievements without valid player id!!!

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// accomplish first play achievement
if (global.FirstPlay &amp;&amp; !is_undefined(gs_getSetting(global.CurrentPlayer))) {
    accomplishAchievement("firstTime");
    global.FirstPlay = false;
} else if (global.FirstPlay &amp;&amp; is_undefined(gs_getSetting(global.CurrentPlayer))) {
    alarm[3] = room_speed;  // check once more in a second
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// request link account url
if (oGlobalStatsIOController.playerID != noone) {
    linkAccount(oGlobalStatsIOController.playerID);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// request highscore list of top ten
getHighscoreList(topEntries);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// request rank of player
getRank();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (oGlobalStatsIOController.gsLinkAccountURL != noone &amp;&amp; !linkButtonCreated) {
    instance_create(oBackButton.x - 200, oBackButton.y, oLinkButton);
    linkButtonCreated = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fontBig);
draw_text(room_width/2, 30, "Scores");
draw_set_font(fontNormal);

var yy = 100;
var xx = room_width/2;
var elems = 0;
var i;

// rank information
if (oGlobalStatsIOController.gsRank == 0) {
    draw_text(xx, yy, "Retrieving rank information...");
} else {
    var name, rank, lastscore, lasttime;
    // best score for current player
    name = oGlobalStatsIOController.gsRank[RankResult.Name];
    rank = oGlobalStatsIOController.gsRank[RankResult.Rank];
    lastscore = oGlobalStatsIOController.gsRank[RankResult.Value];
    lasttime = oGlobalStatsIOController.gsRank[RankResult.UpdatedAt];
    draw_text(xx, yy, string(name) + ", your best score is " + string(rank) + ". place with a score of " + string(lastscore) + " at " + string(lasttime));
}

// highscores
yy = 200;
if (oGlobalStatsIOController.gsHighscores == 0) {
    draw_text(xx, yy, "Retrieving highscore information...");
} else {
    elems = oGlobalStatsIOController.gsHighscoresSize;
    for (i = 0; i &lt; elems; i++) {
        var name, rank, lastscore;
        name = oGlobalStatsIOController.gsHighscores[i, RankResult.Name];
        rank = oGlobalStatsIOController.gsHighscores[i, RankResult.Rank];
        lastscore = oGlobalStatsIOController.gsHighscores[i, RankResult.Value];
        draw_text(xx, yy +i*30, "Rank " + string(rank) + ": " + string(name) + " with a score of " + string(lastscore));
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
